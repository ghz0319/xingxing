name: Update GitHub Starred Projects Index

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'  # 每天 UTC 6:00 自动执行

jobs:
  update-stars:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install requests PyYAML

      - name: Generate stars.md
        run: |
          mkdir -p scripts
          cat > scripts/update_stars.py <<'EOF'
          import requests, datetime, os, sys

          GH_TOKEN = os.getenv("GH_TOKEN")
          headers = {"Authorization": f"token {GH_TOKEN}"} if GH_TOKEN else {}

          user = "ghz0319"
          url = f"https://api.github.com/users/{user}/starred?per_page=100"
          md = [
              "# 🌟 GitHub Starred Projects Index\n",
              f"_Last updated: {datetime.datetime.now(datetime.UTC).strftime('%Y-%m-%d %H:%M:%S')} UTC_\n\n"
          ]

          total = 0
          while url:
              r = requests.get(url, headers=headers)
              if r.status_code != 200:
                  print("❌ GitHub API Error", r.status_code)
                  sys.exit(1)
              data = r.json()
              for repo in data:
                  name = repo["full_name"]
                  desc = repo.get("description") or ""
                  md.append(f"- [{name}]({repo['html_url']}) — {desc.strip()}\n")
              total += len(data)
              url = r.links.get("next", {}).get("url")

          md.insert(1, f"**Total Starred Repositories:** {total} ⭐\n\n")

          with open("stars.md", "w", encoding="utf-8") as f:
              f.writelines(md)

          # 写入统计信息到临时文件，供 README 更新使用
          with open("sync_info.txt", "w") as f:
              f.write(f"{total}|{datetime.datetime.now(datetime.UTC).strftime('%Y-%m-%d %H:%M:%S')}")
          EOF

          python scripts/update_stars.py

      - name: Update README badges
        run: |
          if [ -f sync_info.txt ]; then
            IFS='|' read total lastsync < sync_info.txt
            echo "Total stars: $total, Last sync: $lastsync"
            sed -i "s/🌟 Total Stars:.*/🌟 Total Stars: ${total}/" README.md
            sed -i "s/⏰ Last Sync:.*/⏰ Last Sync: ${lastsync} UTC/" README.md
          fi

      - name: Commit and push changes
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add stars.md README.md
          if git diff --cached --quiet; then
            echo "✅ No changes to commit."
          else
            git commit -m "Auto update stars.md and README badges"
            git push
          fi
